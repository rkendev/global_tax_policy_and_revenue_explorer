{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Global Tax Policy &amp; Revenue Explorer","text":"<p>A small, production-lean project to explore tax-to-GDP and tax composition across countries and time using a reproducible ETL and a simple UI.</p>"},{"location":"#live-links","title":"Live links","text":"<ul> <li>Streamlit app: add your URL here</li> <li>Changelog: /changelog</li> <li>Repository: https://github.com/rkendev/global_tax_policy_and_revenue_explorer</li> </ul>"},{"location":"#quickstart-local","title":"Quickstart (local)","text":"<p>```bash make init        # create venv + install deps + pre-commit make etl         # build bronze -&gt; silver -&gt; gold from OECD SDMX make ui          # open Streamlit (port 8501)</p>"},{"location":"#optional","title":"optional:","text":"<p>make api         # start FastAPI stub (port 8000) pytest -q        # run tests Artifacts are written to data/bronze, data/silver, and data/gold (git-ignored).</p> <p>Data source &amp; attribution Source: OECD Revenue Statistics (SDMX).</p> <p>Attribution: \u201cSource: OECD Revenue Statistics (SDMX)\u201d.</p> <p>Last updated: shown in the app header (derived from ETL snapshot metadata).</p> <p>We ingest a narrow slice (first 5 countries; 2010\u2013latest) to keep the MVP fast and deterministic.</p> <p>Pipeline overview Bronze (raw): Single SDMX extract persisted to CSV + a small .meta.json (snapshot timestamp, query).</p> <p>Silver (normalized):</p> <p>dim_country (ISO2 \u2192 ISO3, canonical names)</p> <p>dim_tax_code (OECD codes; PIT/VAT highlighted first)</p> <p>fact_tax (country, year, code, value, unit)</p> <p>Gold (metrics):</p> <p>tax_to_gdp.parquet</p> <p>composition.parquet (share of total tax, per country-year; sums to exactly 100%)</p> <p>Validations</p> <p>Pandera schema on silver/gold, ranges 0\u2013100, and composition reconciliation (\u2248100% with rounding-proof adjustment).</p> <p>E2E test asserts row counts and golden slices (3 countries \u00d7 2 years).</p> <p>Metrics Metric  Definition Tax-to-GDP (%)  (Total tax revenue / GDP) \u00d7 100 for a given country-year. Composition (% of total tax)    Share by OECD tax code (e.g., PIT, VAT, etc.) within a country-year. Bars in the UI are normalized to 0\u2013100%.</p> <p>UI features (MVP) Overview: single-country point-in-time view.</p> <p>Compare: up to 5 countries, year range slider, Tax-to-GDP lines, stacked composition for a selected year, and CSV downloads.</p> <p>Missing years are handled gracefully; legend remains stable.</p> <p>Runbook Nightly refresh: GitHub Actions builds gold artifacts daily (02:00 UTC).</p> <p>Manual refresh: make etl locally or rerun the Nightly ETL workflow in Actions.</p> <p>Troubleshooting:</p> <p>App port occupied? fuser -k 8501/tcp (Linux) then make ui.</p> <p>CI failures: check the Build gold step and attached artifacts.</p> <p>Roadmap Expand ingest to 10\u201320 additional countries behind existing validations.</p> <p>Add \u201cdownload chart data\u201d on Overview.</p> <p>Optional: versioned docs, broader categories, and API endpoints for gold metrics.</p> <p>License &amp; notes OECD data licensing/terms apply for the SDMX source.</p> <p>This repository\u2019s code is licensed under add your license.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>--8&lt;-- \"../CHANGELOG.md\"</p>"},{"location":"adr/ADR-001/","title":"ADR-001: Start with OECD subset + DuckDB/Parquet","text":"<ul> <li>We begin with a narrow, high-quality dataset (OECD Revenue Statistics subset).</li> <li>Use local-friendly columnar storage (Parquet) and DuckDB for fast, reproducible dev.</li> <li>Avoid premature infra; keep the pipeline deterministic and versioned.</li> </ul>"}]}